project(Beast-Web)

# AUTOGEN FIND COMMANDS GENERATED BY goldpkg
# AUTOGEN FIND PLEASE DO NOT MODIFY
find_package(Boost 1.74 REQUIRED COMPONENTS system)
find_path(HEDLEY_INCLUDE_DIRS "hedley.h")
# AUTOGEN FIND LIBRARY WILL LOOK FOR PACKAGES HERE ONLY
# AUTOGEN FIND ENDS HERE

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS TRUE)

add_library(${PROJECT_NAME} SHARED)

add_library(libs::${PROJECT_NAME} ALIAS ${PROJECT_NAME})

# Add compile definitions to export
target_compile_definitions(${PROJECT_NAME}
PRIVATE
#	Boost Asio/Beast Coroutine TS support
	BOOST_ASIO_HAS_CO_AWAIT
	BOOST_ASIO_HAS_STD_COROUTINE
# Boost Beast use string_view
	BOOST_BEAST_USE_STD_STRING_VIEW
# HTTP_SERVER Start in Build mode
	PC_LIB_HTTP_SERVER_BUILD_MODE)

target_include_directories(${PROJECT_NAME}
# A PUBLIC Header can be accessed outside
PUBLIC
$<INSTALL_INTERFACE:include>
$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
# A Private Header File cannot be accessed by
# Any packages that uses it
)

# Link to BOOST System
target_link_libraries(${PROJECT_NAME} PUBLIC Boost::system)

target_precompile_headers(${PROJECT_NAME}
PRIVATE
<any>
<functional>
<string_view>
<regex>
<optional>
<unordered_map>

<coroutine>

<boost/asio/awaitable.hpp>
<boost/asio/use_awaitable.hpp>

<boost/beast/core/flat_buffer.hpp>
<boost/beast/core/tcp_stream.hpp>
<boost/beast/core/string.hpp>

<boost/beast/http/status.hpp>
<boost/beast/http/string_body.hpp>
<boost/beast/http/verb.hpp>

)

file(GLOB_RECURSE LIBRARY_CXX_SOURCES impl/*.cxx)
file(GLOB_RECURSE LIBRARY_HXX_SOURCES include/*.hxx)

target_sources(${PROJECT_NAME}
PRIVATE
${LIBRARY_CXX_SOURCES}
${LIBRARY_HXX_SOURCES}

 "include/Response.hxx")


target_compile_features(${PROJECT_NAME}
PRIVATE
cxx_std_11
)

if (MSVC)
target_compile_options(${PROJECT_NAME} PRIVATE /Zc:__cplusplus)
elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
target_compile_options(${PROJECT_NAME} PRIVATE -fcoroutines-ts)
endif()


# add_subdirectory(tests)

# AUTOGEN TARGET GENERATED BY goldpkg
# AUTOGEN TARGET PLEASE DO NOT MODIFY
target_include_directories(${PROJECT_NAME} PRIVATE ${HEDLEY_INCLUDE_DIRS})
target_include_directories(${PROJECT_NAME} PRIVATE ${BOOST_ARRAY_INCLUDE_DIRS})
target_include_directories(${PROJECT_NAME} PRIVATE ${BOOST_LEXICAL_CAST_INCLUDE_DIRS})
target_include_directories(${PROJECT_NAME} PRIVATE ${BOOST_BEAST_INCLUDE_DIRS})
target_include_directories(${PROJECT_NAME} PRIVATE ${BOOST_ASIO_INCLUDE_DIRS})
target_include_directories(${PROJECT_NAME} PRIVATE ${BOOST_ALGORITHM_INCLUDE_DIRS})
# AUTOGEN TARGET LIBRARY WILL LOOK FOR PACKAGES HERE ONLY
# AUTOGEN TARGET ENDS HERE
